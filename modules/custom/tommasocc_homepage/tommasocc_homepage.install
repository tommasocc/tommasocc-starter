<?php

/**
 * @file
 * Install, update and uninstall functions for the tommasocc Homepage module.
 */

use Drupal\tommasocc_homepage\Entity\Homepage;

/**
 * Generates the homepage entity.
 */
function generate_homepage() {
  // Create the new Homepage entity.
  $homepage = Homepage::create([
    'label' => 'Home'
  ]);
  $homepage->save();

  // Set new homepage as site front.
  $config_factory = \Drupal::configFactory();
  $page_value = \Drupal::config('system.site')->get('page');
  $page_new = [
    ...$page_value,
    ...['front' => '/home/1']
  ];
  $config = $config_factory->getEditable('system.site');
  $config->set('page', $page_new);
  $config->save(TRUE);
}

/**
 * Implements hook_install().
 */
function tommasocc_homepage_install() {
  generate_homepage();
}

// /**
//  * Implements hook_uninstall().
//  */
// function tommasocc_homepage_uninstall() {
//   \Drupal::messenger()->addStatus(__FUNCTION__);
// }

/**
 * Implements hook_schema().
 */
function tommasocc_homepage_schema() {
  $schema['tommasocc_homepage_example'] = [
    'description' => 'Table description.',
    'fields' => [
      'id' => [
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique record ID.',
      ],
      'uid' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {users}.uid of the user who created the record.',
      ],
      'status' => [
        'description' => 'Boolean indicating whether this record is active.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
      ],
      'type' => [
        'type' => 'varchar_ascii',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Type of the record.',
      ],
      'created' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Timestamp when the record was created.',
      ],
      'data' => [
        'type' => 'blob',
        'not null' => TRUE,
        'size' => 'big',
        'description' => 'The arbitrary data for the item.',
      ],
    ],
    'primary key' => ['id'],
    'indexes' => [
      'type' => ['type'],
      'uid' => ['uid'],
      'status' => ['status'],
    ],
  ];

  return $schema;
}

/**
 * Implements hook_requirements().
 */
function tommasocc_homepage_requirements($phase) {
  $requirements = [];

  if ($phase == 'runtime') {
    $value = mt_rand(0, 100);
    $requirements['tommasocc_homepage_status'] = [
      'title' => t('tommasocc Homepage status'),
      'value' => t('tommasocc Homepage value: @value', ['@value' => $value]),
      'severity' => $value > 50 ? REQUIREMENT_INFO : REQUIREMENT_WARNING,
    ];
  }

  return $requirements;
}
